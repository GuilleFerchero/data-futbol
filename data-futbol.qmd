---
title: "Data Futbol"
format: html
editor: visual
---

## Datos y futbol en R

La idea de este artículo es explorar algunas variantes dentro del análisis de datos de futbol utilizando el paquete [worldfootballR](https://jaseziv.github.io/worldfootballR/index.html) y generar visualizaciones.

## Ideas

-   Generar un workflow para el análisis de datos orientados al futbol

-   Explorar las opciones del paquete [worldfootballR](https://jaseziv.github.io/worldfootballR/index.html)

-   Explorar opciones de fuentes de google

-   Explorar estilos de visualizaciones

## Recursos

https://www.youtube.com/watch?v=mBbQpaLWcLM&ab_channel=LanusStats%7CAnalisisdedatosparaf%C3%BAtbol

https://github.com/OKcomputer626/football_ggplots/tree/main/Liga%20MX

## **Datos y Limpieza**

```{r}
#VER https://rpubs.com/jojorabbit1/1052372
#https://www.kaggle.com/code/evangower/using-the-worldfootballr-package

#cargamos librerias de trabajo

rm(list = ls())
options(scipen = 999)

#install.packages("worldfootballR")
library(worldfootballR)
library(tidyverse)
library(DT)
#install.packages("showtext")
library(showtext)
#install.packages("ggtext")
library(ggtext)

#fuentes

font_add_google(family = "montserrat", "Montserrat")
font_add_google(family = "Oswald", "Oswald")
showtext_auto()



```

```{r}
##########################################################################PRUEBA DE SCRAPEO POR PARTIDOS################################################

primera_division <- fb_match_urls(country = "ARG", #liga arg
                                  gender = "M", #masculino
                                  season_end_year = 2024, #temporada
                                  non_dom_league_url = "https://fbref.com/en/comps/905/history/Copa-de-la-Liga-Profesional-Seasons",
                                  tier="1st")

# #recuperamos las estadisticas avanzadas

primera_resumen <- fb_advanced_match_stats(match_url = primera_division,
                                           stat_type = "summary",
                                           team_or_player = "team")

#######################################################################################################################################################

primera_resumen_racing <- primera_resumen %>% 
  filter(Team == "Racing Club")

penales <- primera_resumen %>%
  select(Team,PK, PKatt) %>% 
  group_by(Team) %>% 
  summarise(sum(PK),
            sum(PKatt))

winrate <- sum(penales$PK)/(sum(penales$PKatt))


penalesint <- sum(penales$PKatt)
penalesgol <- sum(penales$PK)

```

```{r}
#carga de función

cups <- c("UEFA European Football Championship")
df <- load_match_comp_results(comp_name = cups)

df_url_2021 <- fb_match_urls(country = "",
                        gender = "M",
                        season_end_year = 2021,
                        non_dom_league_url =  "https://fbref.com/en/comps/676/history/European-Championship-Seasons")

df_resumen_2021 <- fb_advanced_match_stats(match_url = df_url_2021,
                                           stat_type = "summary",
                                           team_or_player = "team")



df_url_2024 <- fb_match_urls(country = "",
                        gender = "M",
                        season_end_year = 2024,
                        non_dom_league_url =  "https://fbref.com/en/comps/676/history/European-Championship-Seasons")

df_resumen_2024 <- fb_advanced_match_stats(match_url = df_url_2024,
                                           stat_type =  "summary",
                                           team_or_player = "team")






```


```{r}
# ejemplo de OKcomputer626 https://github.com/OKcomputer626/football_ggplots/blob/main/Liga%20MX/Club%20America%20FC%20Trendline.R
# explicación de media movil https://rpubs.com/arquez9512/628582

fb_teams_urls("https://fbref.com/en/comps/31/2023-2024/2023-2024-Liga-MX-Stats")
df <- fb_team_match_results("https://fbref.com/en/squads/18d3c3a3/2023-2024/America-Stats")

df_mx <- df %>% 
  mutate(
    xg_roll = zoo::rollmean(xG, k = 5, fill = NA),
    xGA_roll = zoo::rollmean(xGA, k = 5, fill = NA)) %>% 
  select(Date,xg_roll,xGA_roll) %>% 
  pivot_longer(
    cols = c(xg_roll,xGA_roll),
    names_to = "Variables",
    values_to = "count"
  )
  
#write_csv2(df_mx,"../data-futbol/data/df_mx.csv")

df_mx %>%
  ggplot(aes(x = Date, y = count, group = Variables, color = Variables, fill = Variables)) +
  geom_line(linewidth = 0.5) +
  geom_point(size = 2.8, shape = 21, color = "black") +
  geom_smooth(method = "lm", se = FALSE, linetype = "dashed", linewidth = 0.7) +
  geom_vline(xintercept = c("2023-11-29", "2023-12-17"), color = "white", linetype = "dashed", size = 0.8)+
  annotate("text", x = "2023-09-30", y = 2.5, color = "white", label = "Apertura 2023 Regular Season", family = "montserrat", fontface = "bold", size = 8.5) +
  annotate("text", x = 20.5, y = 2.5, color = "white", label = "Liguilla 2023", family = "montserrat", fontface = "bold", size = 8.5) +
  annotate("text", x = 20.5, y = 2.425, color = "#D38D20", label = "CHAMPIONS", family = "Oswald", fontface = "bold", size = 10) +
  annotate("text", x = "2024-01-27", y = 2.5, color = "white", label = "Clausura 2024 Regular Season", family = "montserrat", fontface = "bold", size = 8.5) +
  labs(
    title = "Club América Expected Goals <span style = 'color:#ffeb00;'>For</span> & <span style = 'color:#e62b2f;'>Against</span> Trend Over Time",
    subtitle = "5 game rolling average | Liga MX | Apertura 2023 - Clausura 2024 MD 9",
    caption = "X: @AndresAnalytics | Data: fbref via Opta",
    x = "MatchDate",
    y = "Expected Goals Per Game"
  ) +
  scale_color_manual(values = c("#ffeb00","#e62b2f")) +
  scale_fill_manual(values = c("#ffeb00","#e62b2f")) +
  theme(
    text = element_text(family = "montserrat", color = "white"),
    plot.background = element_rect(fill = "#292929"),
    plot.title = element_markdown(face = "bold", size = 32, hjust = 0.5),
    plot.subtitle = element_text(size = 22, hjust = 0.5),
    plot.caption = element_text(face = "italic", size = 20),
    axis.text = element_text(face = "bold", size = 20, color = "white"),
    axis.text.x = element_text(angle = 90),#ROTA LAS FECHAS DEL EJE X
    axis.ticks = element_blank(),
    panel.background = element_rect(fill = "#292929"),
    panel.grid.minor = element_blank(),
    panel.grid.major = element_line(linetype = "dashed", color = "grey25", size = 0.3),
    legend.position = "none"
    
  )
ggsave("America FC trendline.png", width = 12)


```

# NIVEL EQUIPO

La idea es ahora replicar este mismo gráfico con los siguientes objetivos:

* Usar datos de futbol argentino (Racing)
* unir temporadas para hacer una serie de 2 o 3
* Marcar periodos de dts (Pizzi : 21/01/21 - 9/8/21)
                          Gago  : 23/10/21 - 1/10/23)
* usar otra fuente y otro estilo de colores


```{r}
#Carga y limpieza

# link_lp2022 <- fb_teams_urls("https://fbref.com/en/comps/21/2022/2022-Liga-Profesional-Argentina-Stats")
df_lp2021   <- fb_team_match_results("https://fbref.com/en/squads/8e20e13d/2021/Racing-Club-Stats")
# df_lp2022   <- fb_team_match_results("https://fbref.com/en/squads/8e20e13d/2022/Racing-Club-Stats")
# df_lp2023   <- fb_team_match_results("https://fbref.com/en/squads/8e20e13d/2023/Racing-Club-Stats")
# df_lp2024   <- fb_team_match_results("https://fbref.com/en/squads/8e20e13d/2024/Racing-Club-Stats")


#df_racing <- rbind(df_lp2021,df_lp2022,df_lp2023,df_lp2024)

df_rac <- df_lp2021 %>% 
  mutate(
    xg_roll = zoo::rollmean(xG, k = 5, fill = NA),
    xGA_roll = zoo::rollmean(xGA, k = 5, fill = NA)) %>% 
  select(Date,xg_roll,xGA_roll) %>% 
  pivot_longer(
    cols = c(xg_roll,xGA_roll),
    names_to = "Variables",
    values_to = "count"
  )

#write_csv2(df_racing,"../data-futbol/data/df_racing.csv")

df_aux <- left_join(df_rac,df_lp2021) %>% 
  select(c(Date,Variables,count,Comp))

df_sinlib <- df_aux %>% 
  filter(Comp != "Libertadores")
  

```

Visualización racing

NOTA: El grafico funciona pero hay que ver el tema de las fechas (se puede pensar una visualización por año) y los vline

```{r}

df_aux %>%
  filter(Comp != "Libertadores") %>% 
  ggplot(aes(x = Date, y = count, group = Variables, color = Variables, fill = Variables)) +
  geom_line(linewidth = 0.5) +
  geom_point(size = 2.8, shape = 21, color = "black") +
  geom_smooth(method = "lm", se = FALSE, linetype = "dashed", linewidth = 0.7) +
  geom_vline(xintercept = c("2021-06-04"), color = "#1b1f2f", linetype = "dashed", size = 0.8)+
  annotate("segment", x = "2021-02-12", xend= "2021-08-10",y = 2.3, colour = "#2c698d")+
  annotate("text", x = "2021-05-16",y = 2.35, color = "#2c698d", label = "Juan Antonio Pizzi", family = "montserrat", fontface = "bold", size = 8.5) +
  annotate("segment", x = "2021-08-10", xend= "2021-10-19",y = 2.3, colour = "#fb7756")+
  annotate("text", x = "2021-09-18",y = 2.35, color = "#fb7756", label = "Claudio Ubeda", family = "montserrat", fontface = "bold", size = 8.5) +
  annotate("segment", x = "2021-10-19", xend= "2021-12-11",y = 2.3, colour = "#272643")+
  annotate("text", x = "2021-11-21",y = 2.35, color = "#272643", label = "Fernando Gago", family = "montserrat", fontface = "bold", size = 8.5) +
  annotate("text", x = "2021-09-30",y = 2.6, color = "#1b1f2f", label = "Liga Profesional 2021", family = "montserrat", fontface = "bold", size = 8.5) +
  annotate("text", x = "2021-04-04", y = 2.6, color = "#1b1f2f", label = "Copa de la Liga 2021", family = "montserrat", fontface = "bold", size = 8.5) +
  labs(
    title = "Racing Club Expected Goals <span style = 'color:#bae8e8;'>A favor</span> & <span style = 'color:#660000;'>En contra</span> Año 2021",
    subtitle = "5 game rolling average | Copa de la Liga | Liga Profesional ",
    caption = "X: @Guilleadhonorem | Data: fbref via Opta",
    x = "MatchDate",
    y = "Expected Goals Per Game"
  ) +
  scale_color_manual(values = c("#bae8e8","#660000")) +
  scale_fill_manual(values = c("#bae8e8","#660000")) +
  theme(
    text = element_text(family = "montserrat", color = "black"),
    plot.background = element_rect(fill = "#f7f6f6"),
    plot.title = element_markdown(face = "bold", size = 32, hjust = 0.5),
    plot.subtitle = element_text(size = 22, hjust = 0.5),
    plot.caption = element_text(face = "italic", size = 20),
    axis.text = element_text(face = "bold", size = 20, color = "black"),
    axis.text.x = element_text(angle = 90),#ROTA LAS FECHAS DEL EJE X
    axis.ticks = element_blank(),
    panel.background = element_rect(fill = "#f7f6f6"),
    panel.grid.minor = element_blank(),
    panel.grid.major = element_line(linetype = "dashed", color = "#2c698d", size = 0.1),
    legend.position = "none"
    
  )
ggsave("Racing.png", width = 12)


```


